// Copyright 2015 The Cockroach Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License. See the AUTHORS file
// for names of contributors.
//
// Author: Matt Tracy (matt@cockroachlabs.com) 

syntax = "proto2";
package cockroach.proto;
option go_package = "proto";

import "gogoproto/gogo.proto";


// TimeSeriesDatapoint is a single point of time series data; a value associated
// with a timestamp.
message TimeSeriesDatapoint {
  // The timestamp when this datapoint is located, expressed in nanoseconds
  // since the unix epoch.
  optional int64 timestamp_nanos = 1 [(gogoproto.nullable) = false];
  // A floating point representation of the value of this datapoint.
  optional double value = 2 [(gogoproto.nullable) = false];
}

// TimeSeriesData is a set of measurements of a single named variable at
// multiple points in time. This message contains a name and a source which, in
// combination, uniquely identify the time series being measured. Measurement
// data is represented as a repeated set of TimeSeriesDatapoint messages.
message TimeSeriesData {
  // A string which uniquely identifies the variable from which this data was
  // measured.
  optional string name = 1 [(gogoproto.nullable) = false];
  // A string which identifies the unique source from which the variable was measured.
  optional string source = 2 [(gogoproto.nullable) = false];
  // Datapoints representing one or more measurements taken from the variable.
  repeated TimeSeriesDatapoint datapoints = 3;
}

// TimeSeriesQueryRequest is the standard incoming time series query request
// accepted from cockroach clients.
message TimeSeriesQueryRequest {
    // A timestamp in nanoseconds which defines the early bound of the time span
    // for this query.
    optional int64 start_nanos = 1 [(gogoproto.nullable) = false];
    // A timestamp in nanoseconds which defines the late bound of the time span
    // for this query. Must be greater than start_nanos.
    optional int64 end_nanos = 2 [(gogoproto.nullable) = false];

    // Each Query defines a specific metric to query over the time span of
    // this request.
    message Query {
        // The exact name of the time series to query.
        optional string name = 1 [(gogoproto.nullable) = false];
    }

    // A set of Queries for this request. A request must have at least one
    // Query.
    repeated Query queries = 3 [(gogoproto.nullable) = false];
}

// TimeSeriesQueryResponse is the standard response for time series queries
// returned to cockroach clients.
message TimeSeriesQueryResponse {
    // Result is the data returned from a single metric query over a time span.
    message Result {
        // A string which uniquely identifies the variable from which this data was
        // measured.
        optional string name = 1 [(gogoproto.nullable) = false];
        // A list of sources from which the data was aggregated.
        repeated string sources = 2 [(gogoproto.nullable) = false];
        // Datapoints describing the queried data.
        repeated TimeSeriesDatapoint datapoints = 3;
    }

    // A set of Results; there should be one result for each Query in the
    // matching TimeSeriesQueryRequest.
    repeated Result results = 1; 
}
